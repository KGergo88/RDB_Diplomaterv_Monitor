RDB Diplomaterv Monitor
=======================

A monitor program for the RDB Diplomaterv project (https://github.com/KGergo88/RDB_Diplomaterv).



Table of contents
=================

	1 - Description
                1a - Usage
                1b - Measurement data protocol
                1c - JFST protocol
	2 - Dependencies
	3 - Portability
	4 - Building the project
        5 - Release notes
        6 - License



1 - Description
===============

The RDB Diplomaterv Monitor was developed in order to visualise the measurement results of the RDB Diplomaterv project or any other software that produces results
that are following the measurement data protocol (see chapter 1b).

The data that will be displayed are received through a serial port. In the tested environment the ST_LinkV2 debugger of the RDB Diplomaterv project
was connected to the PC running the RDB Diplomaterv Monitor with a USB cable and the data was received through either a COM port (Windows) or a device in the /dev folder (Linux).



1a - Usage
==========

The usage of the prgram is quite straightforward: we need to enter the name of the port we would like to listen to into the textfield in the bottom right corner and then click the
"Open Serial Port" button. The port name can be for example "COM3" on Windows or "/dev/ttyACM0" on Linux. The correct name can be found out for example by checking the available ports
before and after connecting the device to the PC and looking for a port that appeared after making the connection.

The serial port settings that are expected by the program:
Baudrate:     115200 bps
Data bits:    8
Stop bits:    1
Parity:       none
Flow control: none

The status field in the lower side of the window tells whether the port could be opened or not. After successfully connecting to the port, the text on the button will change to
"Close Serial Port". It should be noted that if any other program listens to the same port that we have opened, then the data on the port will not completely received by the monitor,
and this might lead to dropped measurement results because of violations of the measurement data protocol. Then the program will listen to the opened serial port and list every diagram
that was received on the port on the right side of the window. The listed diagrams can be selected for displaying by clicking on them.



1b - Measurement data protocol
==============================

The data needs to be formatted the following way in order to be processed by the program:
<<<START>>>
"X_AXIS_TITLE","Y0_AXIS_TITLE",...,"Yn_AXIS_TITLE",
"X_AXIS_DATA0","Y0_AXIS_DATA0",...,"Yn_AXIS_DATA0",
.
.
.
"X_AXIS_DATAn","Y0_AXIS_DATAn",...,"Yn_AXIS_DATAn",
<<<END>>>

The following requirements have to be fulfilled:
	- The " symbols are not part of the format they are only marking the beginning and the end of an element
	- The measurement data is always starting with the pattern "<<<START>>>"
	- After the starting pattern the headline is transmitted:
		- Every headline element is followed by a comma "," 
		- The headline tells how many different signals were measured and their names
		- There has to be always at least two headline elements transmitted: the common X axis and at least one signal
		- The headline elements:
                        - can only contain alphanumeric characters (0..9, A..Z, a..z)
	- After the headline the measured data is transmitted:
		- Every dataline element is followed by a comma "," 
		- There has to be as many elements in a data line as there was in the headline
		- The data line elements are the values that were measured at the same time
		- The measured signal values in the data line belong to the first data line element, the common X axis value
		- The data line elements:
			- are integer values
			- can have an optional "+" or "-" sign as a prefix, for example "+25" or "-568"
			- without a sign prefix are considered to be positive
	- The measurement data is always ending with the pattern "<<<END>>>"
	- This is called a measurement session that contains all data needed to describe a diagram
	- If there was an error detected in one of the lines then the whole session is invalid



1c - JFST Protocol
=================

JFST stands for "JSON formatted storage and transfer", which means that this protocol can be used for both the storage of the diagrams in a file,
and for transfering them to the RDB_Diplomaterv_Monitor by a device doing measurements.

The diagram data is encoded by the JFST protocol in the following way:
[
    {
        "DIAGRAM0"
    },
    .
    .
    .
    {
        "DIAGRAMn"
    }
]

,where "DIAGRAMx" is a description of a diagram. So, the JFST Protocol encodes the data into an array of objects.
Each object describes a diagram and has the following format:

{
    "DIAGRAM_TITLE": <STRING>,
    "CRC_VALUE": <NUMBER> or "NO_CRC",
    "AXIS_TITLES":
    [
        "X_AXIS_TITLE",
        "Y0_AXIS_TITLE",
        .
        .
        .
        "Yn_AXIS_TITLE"
    ]
    "DATA_POINTS":
    [
        {
            "DATA_POINT0"
        },
        .
        .
        .
        {
            "DATA_POINTn"
        }
    ]
}

,where "DATA_POINTx" is a description of a data point. So, the JFST Protocol encodes the data points into an array of objects.
Each object describes a data point and has the following format:

{
    "X_AXIS_TITLE": <NUMBER>,
    "Y0_AXIS_TITLE": <NUMBER> or "NO_DATA",
    .
    .
    .
    "Yn_AXIS_TITLE": <NUMBER> or "NO_DATA",
}

The following requirements have to be fulfilled:
    - TBD...



2 - Dependencies
================

The RDB Diplomaterv Monitor was developed in C++14 and it depends on the following external components:
        - Qt5 v5.12.0 or newer
                - The used components are Core, Widgets, and Charts SerialPort
		- You can download it from the www.qt.io website



3 - Portability
===============

The RDB Diplomaterv Monitor was developed on an Ubuntu 18.10 Linux but it tries to ensure compatibility with Windows 10 as much as possible.
The tagged versions are tested under both Ubuntu and Windows.



4 - Building the project
========================

The RDB Diplomaterv Monitor can be compiled only using the Qt Creator IDE at the moment.



5 - Release notes
=================

v2.0.0 - Architectural rework
    Details:
        - Improvement of the GUI especially the diagram view area
        - New status report messages were added so that the user has more info during runtime
        - The program now is a single-threaded application utiling an event based design
        - Implementation of the new design with signal interfaces
        - Further improvement of the data contained classes: DataPoint, DataLine and Diagram
        - Removal of the BOOST from the project
        - The SerialPort class is now implemented with the SerialPort library of the Qt framework

v1.0.2 - Shutdown failure patch
    Fixes:
        - The shutdown problem that was described in the errata of the v1.0.1 was fixed

v1.0.1 - Memory leak patch for the first release
    Fixes:
        - The memory that was described in the errata of the v1.0.0 was fixed

    Errata:
        - The worker thread will not join when quitting the program while the serial port is open

v1.0.0 - First release
    Functionality:
            + Opening a serial port and listening to it
            + Processing and displaying the diagrams received on the serial port
            + Keeping the received diagrams in the list and allowing switching between them

    Errata:
        - A probable memory leak is present in the program
            + It can be seen when there are at least two diagrams listed in the program
            + When it is being switched between them, the memory usage of the program is increasing rapidly with every switch


6 - License
===========

RDB Diplomaterv Monitor
A monitor program for the RDB Diplomaterv project
Copyright (C) 2018  András Gergő Kocsis

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program (see LICENSE file).  If not, see <https://www.gnu.org/licenses/>.
